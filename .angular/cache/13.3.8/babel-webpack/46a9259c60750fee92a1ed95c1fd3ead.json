{"ast":null,"code":"import _asyncToGenerator from \"/Users/david.adams/Checkouts/angular-sample-standalone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FRUser } from '@forgerock/javascript-sdk';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/user.service\";\nimport * as i3 from \"../../utilities/loading/loading.component\";\n/**\n * Used to log the user out whilst a spinner and message are displayed\n */\n\nexport class LogoutComponent {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n  }\n  /**\n   * As soon as this component loads we want to log the user out\n   */\n\n\n  ngOnInit() {\n    this.logout();\n  }\n  /**\n   * Log the user out and redirect to the home page\n   */\n\n\n  logout() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        /** *********************************************************************\n         * SDK INTEGRATION POINT\n         * Summary: Logout, end session and revoke tokens\n         * ----------------------------------------------------------------------\n         * Details: Since this method is a global method via the Context API,\n         * any part of the application can log a user out. This is helpful when\n         * APIs are called and we get a 401 response, but here we respond to user\n         * input clicking logout.\n         ********************************************************************* */\n        yield FRUser.logout();\n        _this.userService.info = undefined;\n        _this.userService.isAuthenticated = false;\n        setTimeout(() => _this.redirectToHome(), 1000);\n      } catch (err) {\n        console.error(`Error: logout did not successfully complete; ${err}`);\n      }\n    })();\n  }\n  /**\n   * Redirect the user to the home page\n   */\n\n\n  redirectToHome() {\n    this.router.navigateByUrl('/home');\n  }\n\n}\n\nLogoutComponent.ɵfac = function LogoutComponent_Factory(t) {\n  return new (t || LogoutComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService));\n};\n\nLogoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LogoutComponent,\n  selectors: [[\"app-logout\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"cstm_container_v-centered\", \"container-fluid\", \"d-flex\", \"align-items-center\"], [1, \"w-100\"], [\"message\", \"You're being logged out ...\"]],\n  template: function LogoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-loading\", 2);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  directives: [i3.LoadingComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/david.adams/Checkouts/angular-sample-standalone/src/app/features/logout/logout.component.ts"],"names":["FRUser","i0","i1","i2","i3","LogoutComponent","constructor","router","userService","ngOnInit","logout","info","undefined","isAuthenticated","setTimeout","redirectToHome","err","console","error","navigateByUrl","ɵfac","LogoutComponent_Factory","t","ɵɵdirectiveInject","Router","UserService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","LogoutComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","directives","LoadingComponent","encapsulation"],"mappings":";AAAA,SAASA,MAAT,QAAuB,2BAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,6BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2CAApB;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,WAAW,CAACC,MAAD,EAASC,WAAT,EAAsB;AAC7B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,QAAQ,GAAG;AACP,SAAKC,MAAL;AACH;AACD;AACJ;AACA;;;AACUA,EAAAA,MAAM,GAAG;AAAA;;AAAA;AACX,UAAI;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,cAAMV,MAAM,CAACU,MAAP,EAAN;AACA,QAAA,KAAI,CAACF,WAAL,CAAiBG,IAAjB,GAAwBC,SAAxB;AACA,QAAA,KAAI,CAACJ,WAAL,CAAiBK,eAAjB,GAAmC,KAAnC;AACAC,QAAAA,UAAU,CAAC,MAAM,KAAI,CAACC,cAAL,EAAP,EAA8B,IAA9B,CAAV;AACH,OAdD,CAeA,OAAOC,GAAP,EAAY;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAe,gDAA+CF,GAAI,EAAlE;AACH;AAlBU;AAmBd;AACD;AACJ;AACA;;;AACID,EAAAA,cAAc,GAAG;AACb,SAAKR,MAAL,CAAYY,aAAZ,CAA0B,OAA1B;AACH;;AAvCwB;;AAyC7Bd,eAAe,CAACe,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIjB,eAAV,EAA2BJ,EAAE,CAACsB,iBAAH,CAAqBrB,EAAE,CAACsB,MAAxB,CAA3B,EAA4DvB,EAAE,CAACsB,iBAAH,CAAqBpB,EAAE,CAACsB,WAAxB,CAA5D,CAAP;AAA2G,CAAxK;;AACApB,eAAe,CAACqB,IAAhB,GAAuB,aAAczB,EAAE,CAAC0B,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAEvB,eAAR;AAAyBwB,EAAAA,SAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAApC;AAAsDC,EAAAA,KAAK,EAAE,CAA7D;AAAgEC,EAAAA,IAAI,EAAE,CAAtE;AAAyEC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,2BAAJ,EAAiC,iBAAjC,EAAoD,QAApD,EAA8D,oBAA9D,CAAD,EAAsF,CAAC,CAAD,EAAI,OAAJ,CAAtF,EAAoG,CAAC,SAAD,EAAY,6BAAZ,CAApG,CAAjF;AAAkOC,EAAAA,QAAQ,EAAE,SAASC,wBAAT,CAAkCC,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACvVlC,MAAAA,EAAE,CAACoC,cAAH,CAAkB,CAAlB,EAAqB,KAArB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,KAAlC,EAAyC,CAAzC;AACApC,MAAAA,EAAE,CAACqC,SAAH,CAAa,CAAb,EAAgB,aAAhB,EAA+B,CAA/B;AACArC,MAAAA,EAAE,CAACsC,YAAH;AACH;AAAE,GAJmD;AAIjDC,EAAAA,UAAU,EAAE,CAACpC,EAAE,CAACqC,gBAAJ,CAJqC;AAIdC,EAAAA,aAAa,EAAE;AAJD,CAArB,CAArC","sourcesContent":["import { FRUser } from '@forgerock/javascript-sdk';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/user.service\";\nimport * as i3 from \"../../utilities/loading/loading.component\";\n/**\n * Used to log the user out whilst a spinner and message are displayed\n */\nexport class LogoutComponent {\n    constructor(router, userService) {\n        this.router = router;\n        this.userService = userService;\n    }\n    /**\n     * As soon as this component loads we want to log the user out\n     */\n    ngOnInit() {\n        this.logout();\n    }\n    /**\n     * Log the user out and redirect to the home page\n     */\n    async logout() {\n        try {\n            /** *********************************************************************\n             * SDK INTEGRATION POINT\n             * Summary: Logout, end session and revoke tokens\n             * ----------------------------------------------------------------------\n             * Details: Since this method is a global method via the Context API,\n             * any part of the application can log a user out. This is helpful when\n             * APIs are called and we get a 401 response, but here we respond to user\n             * input clicking logout.\n             ********************************************************************* */\n            await FRUser.logout();\n            this.userService.info = undefined;\n            this.userService.isAuthenticated = false;\n            setTimeout(() => this.redirectToHome(), 1000);\n        }\n        catch (err) {\n            console.error(`Error: logout did not successfully complete; ${err}`);\n        }\n    }\n    /**\n     * Redirect the user to the home page\n     */\n    redirectToHome() {\n        this.router.navigateByUrl('/home');\n    }\n}\nLogoutComponent.ɵfac = function LogoutComponent_Factory(t) { return new (t || LogoutComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService)); };\nLogoutComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LogoutComponent, selectors: [[\"app-logout\"]], decls: 3, vars: 0, consts: [[1, \"cstm_container_v-centered\", \"container-fluid\", \"d-flex\", \"align-items-center\"], [1, \"w-100\"], [\"message\", \"You're being logged out ...\"]], template: function LogoutComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"app-loading\", 2);\n        i0.ɵɵelementEnd()();\n    } }, directives: [i3.LoadingComponent], encapsulation: 2 });\n"]},"metadata":{},"sourceType":"module"}