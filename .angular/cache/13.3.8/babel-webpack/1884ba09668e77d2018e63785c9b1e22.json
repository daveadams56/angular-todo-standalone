{"ast":null,"code":"import _asyncToGenerator from \"/Users/david.adams/Checkouts/angular-sample-standalone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*\n * angular-todo-prototype\n *\n * webauthn.component.ts\n *\n * Copyright (c) 2021 ForgeRock. All rights reserved.\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file for details.\n */\nimport { EventEmitter } from '@angular/core';\nimport { FRWebAuthn, WebAuthnStepType } from '@forgerock/javascript-sdk';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../utilities/loading/loading.component\";\n/**\n * Used to invoke Web Authentication on the user's browser and return the result\n */\n\nexport class WebAuthnComponent {\n  constructor() {\n    /**\n     * Emits a FRStep representing the updated step after Web Authentication\n     */\n    this.updatedCallback = new EventEmitter();\n  }\n  /**\n   * Initialise any failure messages and whether this field is mandatory\n   */\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.step) {\n        // Determine if a step is a Web Biometrics step\n        const stepType = FRWebAuthn.getWebAuthnStepType(_this.step);\n        let step = _this.step;\n\n        if (stepType === WebAuthnStepType.Registration) {\n          // Registering a new device\n          step = yield FRWebAuthn.register(step);\n        } else if (stepType === WebAuthnStepType.Authentication) {\n          // Authenticating with a registered device\n          step = yield FRWebAuthn.authenticate(step);\n        } // `step` has now been populated with the Web Biometrics credentials\n        // Send this new step to the ForgeRock server\n\n\n        _this.updateValue(step);\n      }\n    })();\n  }\n  /**\n   * Emit an event to the parent component, passing webauthn results\n   * @param event - the value of the text field\n   */\n\n\n  updateValue(event) {\n    this.updatedCallback.emit(event);\n  }\n\n}\n\nWebAuthnComponent.ɵfac = function WebAuthnComponent_Factory(t) {\n  return new (t || WebAuthnComponent)();\n};\n\nWebAuthnComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WebAuthnComponent,\n  selectors: [[\"app-webauthn\"]],\n  inputs: {\n    name: \"name\",\n    step: \"step\"\n  },\n  outputs: {\n    updatedCallback: \"updatedCallback\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"cstm_form-floating\", \"form-floating\", \"mb-3\"], [3, \"message\"]],\n  template: function WebAuthnComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-loading\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"message\", \"Follow the prompts on your device to authenticate ...\");\n    }\n  },\n  directives: [i1.LoadingComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/david.adams/Checkouts/angular-sample-standalone/src/app/features/journey/webauthn/webauthn.component.ts"],"names":["EventEmitter","FRWebAuthn","WebAuthnStepType","i0","i1","WebAuthnComponent","constructor","updatedCallback","ngOnInit","step","stepType","getWebAuthnStepType","Registration","register","Authentication","authenticate","updateValue","event","emit","ɵfac","WebAuthnComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","name","outputs","decls","vars","consts","template","WebAuthnComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","directives","LoadingComponent","encapsulation"],"mappings":"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","sourcesContent":["/*\n * angular-todo-prototype\n *\n * webauthn.component.ts\n *\n * Copyright (c) 2021 ForgeRock. All rights reserved.\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file for details.\n */\nimport { EventEmitter } from '@angular/core';\nimport { FRWebAuthn, WebAuthnStepType } from '@forgerock/javascript-sdk';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../utilities/loading/loading.component\";\n/**\n * Used to invoke Web Authentication on the user's browser and return the result\n */\nexport class WebAuthnComponent {\n    constructor() {\n        /**\n         * Emits a FRStep representing the updated step after Web Authentication\n         */\n        this.updatedCallback = new EventEmitter();\n    }\n    /**\n     * Initialise any failure messages and whether this field is mandatory\n     */\n    async ngOnInit() {\n        if (this.step) {\n            // Determine if a step is a Web Biometrics step\n            const stepType = FRWebAuthn.getWebAuthnStepType(this.step);\n            let step = this.step;\n            if (stepType === WebAuthnStepType.Registration) {\n                // Registering a new device\n                step = await FRWebAuthn.register(step);\n            }\n            else if (stepType === WebAuthnStepType.Authentication) {\n                // Authenticating with a registered device\n                step = await FRWebAuthn.authenticate(step);\n            }\n            // `step` has now been populated with the Web Biometrics credentials\n            // Send this new step to the ForgeRock server\n            this.updateValue(step);\n        }\n    }\n    /**\n     * Emit an event to the parent component, passing webauthn results\n     * @param event - the value of the text field\n     */\n    updateValue(event) {\n        this.updatedCallback.emit(event);\n    }\n}\nWebAuthnComponent.ɵfac = function WebAuthnComponent_Factory(t) { return new (t || WebAuthnComponent)(); };\nWebAuthnComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: WebAuthnComponent, selectors: [[\"app-webauthn\"]], inputs: { name: \"name\", step: \"step\" }, outputs: { updatedCallback: \"updatedCallback\" }, decls: 2, vars: 1, consts: [[1, \"cstm_form-floating\", \"form-floating\", \"mb-3\"], [3, \"message\"]], template: function WebAuthnComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-loading\", 1);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"message\", \"Follow the prompts on your device to authenticate ...\");\n    } }, directives: [i1.LoadingComponent], encapsulation: 2 });\n"]},"metadata":{},"sourceType":"module"}